{"ast":null,"code":"var _jsxFileName = \"/home/hanafi/Downloads/Quiz-MERN-master/client/src/components/CreateQuiz/CreateQuiz.js\";\nimport React from 'react';\nimport Sidebar from '../Sidebar/Sidebar';\nimport './CreateQuiz.css';\nimport Dialog from '../Dialog/Dialog';\nimport axios from 'axios';\nimport Toast from '../Toast/Toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CreateQuiz extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selectPrivate = e => {\n      if (e.target.checked === true) {\n        this.setState({\n          mustBeSignedIn: e.target.checked\n        });\n      } else {\n        this.setState({\n          mustBeSignedIn: false\n        });\n      }\n    };\n\n    this.addAnswer = () => {\n      this.setState({\n        answers: this.state.answers.concat('')\n      });\n    };\n\n    this.updateAnswer = (e, i) => {\n      let newArr = Object.assign([], this.state.answers);\n      newArr[i] = e.target.value;\n      this.setState({\n        answers: newArr\n      });\n    };\n\n    this.saveQuestion = () => {\n      let question = {\n        answers: this.state.answers,\n        correctAnswer: this.state.correctAnswer,\n        questionName: this.state.questionName\n      };\n      this.setState({\n        questions: this.state.questions.concat(question),\n        addQuestion: false,\n        questionName: '',\n        answers: [],\n        correctAnswer: ''\n      });\n    };\n\n    this.removeQuestion = question => {\n      this.setState({\n        questions: this.state.questions.filter(ques => ques.questionName !== question.questionName)\n      });\n    };\n\n    this.saveQuiz = () => {\n      let quiz = {\n        mustBeSignedIn: this.state.mustBeSignedIn,\n        name: this.state.name,\n        questions: this.state.questions,\n        category: this.state.categoryVal,\n        imgUrl: this.state.imgUrl\n      };\n      axios.post('/api/quizzes/create', {\n        quiz,\n        createdBy: localStorage.getItem('_ID')\n      }).then(res => {\n        if (res.data.success) {\n          this.setState({\n            questions: [],\n            answers: [],\n            categoryVal: \"Math\",\n            showToast: true\n          });\n          setTimeout(() => {\n            this.setState({\n              showToast: false\n            });\n          }, 3000);\n        }\n      }).catch(er => {\n        console.error(er);\n      });\n    };\n\n    this.state = {\n      categories: ['Math', 'Science', 'Technology', 'Sports', 'History', 'Misc'],\n      categoryVal: 'Math',\n      mustBeSignedIn: false,\n      questions: [],\n      name: '',\n      addQuestion: false,\n      questionName: '',\n      answers: [],\n      correctAnswer: '',\n      showToast: false,\n      imgUrl: ''\n    };\n  }\n\n  componentDidMount() {\n    if (!localStorage.getItem('JWT_PAYLOAD')) {\n      this.props.history.push('/');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-quiz-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Toast, {\n        model: this.state.showToast,\n        message: \"Quiz Created\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: \"Create Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form card\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            onChange: e => this.setState({\n              name: e.target.value\n            }),\n            value: this.state.name,\n            placeholder: \"Quiz Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            onChange: e => this.setState({\n              imgUrl: e.target.value\n            }),\n            value: this.state.imgUrl,\n            placeholder: \"Img url\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: this.state.categoryVal,\n            onChange: e => this.setState({\n              categoryVal: e.target.value\n            }),\n            className: \"input select\",\n            placeholder: \"Category\",\n            children: this.state.categories.map((cat, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat,\n              children: cat\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 32\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Must be logged in to take\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              checked: this.state.mustBeSignedIn,\n              onChange: this.selectPrivate,\n              type: \"checkbox\",\n              placeholder: \"Must be logged in to take\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 24\n          }, this), this.state.questions.map((ques, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: ques.questionName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Correct Answer: \", ques.correctAnswer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Num of answers: \", ques.answers.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"btn delete\",\n              onClick: () => this.removeQuestion(ques),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 32\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 28\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"questions\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-question\",\n              onClick: () => this.setState({\n                addQuestion: true\n              }),\n              children: \"Add Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => this.saveQuiz(),\n            className: \"btn save-quiz\",\n            children: \"Save Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n            model: this.state.addQuestion,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"new-question-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input\",\n                placeholder: \"Question\",\n                value: this.state.questionName,\n                onChange: e => this.setState({\n                  questionName: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 36\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Answers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 36\n              }, this), this.state.answers.map((ans, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"answer-form\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  value: this.state.ans,\n                  onChange: e => this.setState({\n                    correctAnswer: ans\n                  }),\n                  name: \"answer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 44\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input\",\n                  type: \"text\",\n                  placeholder: \"Answer\",\n                  value: this.state.answers[idx],\n                  onChange: e => this.updateAnswer(e, idx)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 155\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 40\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"add-answer\",\n                onClick: this.addAnswer,\n                children: \"Add Answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 36\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn-wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"btn\",\n                  onClick: () => this.setState({\n                    addQuestion: false\n                  }),\n                  children: \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 40\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"btn\",\n                  onClick: this.saveQuestion,\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 40\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 12\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/hanafi/Downloads/Quiz-MERN-master/client/src/components/CreateQuiz/CreateQuiz.js"],"names":["React","Sidebar","Dialog","axios","Toast","CreateQuiz","Component","constructor","props","selectPrivate","e","target","checked","setState","mustBeSignedIn","addAnswer","answers","state","concat","updateAnswer","i","newArr","Object","assign","value","saveQuestion","question","correctAnswer","questionName","questions","addQuestion","removeQuestion","filter","ques","saveQuiz","quiz","name","category","categoryVal","imgUrl","post","createdBy","localStorage","getItem","then","res","data","success","showToast","setTimeout","catch","er","console","error","categories","componentDidMount","history","push","render","map","cat","idx","length","ans"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Sidebar from '../Sidebar/Sidebar';\nimport './CreateQuiz.css';\nimport Dialog from '../Dialog/Dialog';\nimport axios from 'axios';\nimport Toast from '../Toast/Toast';\n\nexport default class CreateQuiz extends React.Component {\n\n   constructor(props) {\n       super(props);\n       this.state = {\n           categories: ['Math', 'Science', 'Technology', 'Sports', 'History', 'Misc'],\n           categoryVal: 'Math',\n           mustBeSignedIn: false,\n           questions: [],\n           name: '',\n           addQuestion: false,\n           questionName: '',\n           answers: [],\n           correctAnswer: '',\n           showToast: false,\n           imgUrl: ''\n       }\n   }\n\n   componentDidMount() {\n        if (!localStorage.getItem('JWT_PAYLOAD')) {\n            this.props.history.push('/');\n        }\n    }\n\n   selectPrivate = e => {\n       if(e.target.checked === true) {\n           this.setState({\n               mustBeSignedIn: e.target.checked,\n           });\n       } else {\n           this.setState({mustBeSignedIn: false});\n       }\n   }\n\n   addAnswer = () => {\n       this.setState({\n           answers: this.state.answers.concat('')\n       })\n   }\n\n   updateAnswer = (e, i) => {\n       let newArr = Object.assign([], this.state.answers);\n       newArr[i] = e.target.value;\n       this.setState({\n           answers: newArr\n       })\n   }\n\n   saveQuestion = () => {\n       let question = {\n           answers: this.state.answers,\n           correctAnswer: this.state.correctAnswer,\n           questionName: this.state.questionName\n       }\n       this.setState({\n           questions: this.state.questions.concat(question),\n           addQuestion: false,\n           questionName: '',\n           answers: [],\n           correctAnswer: ''\n       });\n   }\n\n   removeQuestion = (question) => {\n       this.setState({\n           questions: this.state.questions.filter(ques => ques.questionName !== question.questionName)\n       })\n   }\n\n   saveQuiz = () => {\n       let quiz = {\n           mustBeSignedIn: this.state.mustBeSignedIn,\n           name: this.state.name,\n           questions: this.state.questions,\n           category: this.state.categoryVal,\n           imgUrl: this.state.imgUrl\n       }\n       axios.post('/api/quizzes/create', {quiz, createdBy: localStorage.getItem('_ID')}).then(res => {\n            if (res.data.success) {\n                this.setState({\n                    questions: [], \n                    answers: [],\n                    categoryVal: \"Math\",\n                    showToast: true\n                });\n                setTimeout(() => {\n                    this.setState({showToast: false});\n                }, 3000);\n            }\n       }).catch(er => {\n           console.error(er);\n       })\n   }\n\n   render() {\n       return (\n           <div className=\"create-quiz-wrapper\">\n               <Toast model={this.state.showToast} message=\"Quiz Created\" />\n               <div>\n                   <Sidebar />\n               </div>\n\n               <div className=\"main\">\n                   <div className=\"header\">Create Quiz</div>\n                   <div className=\"form card\">\n                       <input className=\"input\" onChange={e => this.setState({name: e.target.value})} value={this.state.name} placeholder=\"Quiz Name\" />\n                       <br></br>\n                       <input className=\"input\" onChange={e => this.setState({imgUrl: e.target.value})} value={this.state.imgUrl} placeholder=\"Img url\" />\n                       <br></br>\n                       <select value={this.state.categoryVal} onChange={e => this.setState({categoryVal: e.target.value})} className=\"input select\" placeholder=\"Category\">\n                           {this.state.categories.map((cat, idx) => (\n                               <option key={idx} value={cat}>{cat}</option>\n                           ))}\n                       </select>\n                       <div className=\"checkbox\">\n                           <span>Must be logged in to take</span>\n                           <input checked={this.state.mustBeSignedIn} onChange={this.selectPrivate} type=\"checkbox\" placeholder=\"Must be logged in to take\" />\n                       </div>\n\n                       {this.state.questions.map((ques, idx) => (\n                           <div className=\"question\" key={idx}>\n                               <div>{ques.questionName}</div>\n                               <div>Correct Answer: {ques.correctAnswer}</div>\n                               <div>Num of answers: {ques.answers.length}</div>\n                               <span className=\"btn delete\" onClick={() => this.removeQuestion(ques)}>Delete</span>\n                           </div>\n                       ))}\n\n                       <div className=\"questions\">\n                           <div className=\"add-question\" onClick={() => this.setState({addQuestion: true})}>Add Question</div>\n                       </div>\n\n                       <span onClick={() => this.saveQuiz()} className=\"btn save-quiz\">Save Quiz</span>\n\n                       <Dialog model={this.state.addQuestion}>\n                           <div className=\"new-question-form\">\n                                   <input className=\"input\" placeholder=\"Question\" value={this.state.questionName} onChange={e => this.setState({questionName: e.target.value})} />\n                                   <div>Answers</div>\n                                   {this.state.answers.map((ans, idx) => (\n                                       <div className=\"answer-form\" key={idx}>\n                                           <input type=\"radio\" value={this.state.ans} onChange={e => this.setState({correctAnswer: ans})} name=\"answer\"/> <input className=\"input\" type=\"text\" placeholder=\"Answer\" value={this.state.answers[idx]} onChange={e => this.updateAnswer(e, idx)}/>\n                                       </div>   \n                                   ))}\n                                   <div className=\"add-answer\" onClick={this.addAnswer}>Add Answer</div>\n                                   <div className=\"btn-wrapper\">\n                                       <div className=\"btn\" onClick={() => this.setState({addQuestion: false})}>Close</div>\n                                       <div className=\"btn\" onClick={this.saveQuestion}>Save</div>\n                                   </div>\n                           </div>\n                       </Dialog>\n                   </div>\n               </div>\n           </div>\n       )\n   }\n}\n"]},"metadata":{},"sourceType":"module"}