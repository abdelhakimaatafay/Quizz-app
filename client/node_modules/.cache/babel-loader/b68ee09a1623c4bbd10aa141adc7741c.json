{"ast":null,"code":"var _jsxFileName = \"/home/hanafi/Downloads/Quiz-MERN-master/client/src/components/TakeQuiz/TakeQuiz.js\";\nimport React from 'react';\nimport './TakeQuiz.css';\nimport $ from 'jquery';\nimport ProgressBar from '../ProgressBar/ProgressBar';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class TakeQuiz extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.prevQuestion = () => {\n      let newIdx = this.state.activeQuestionIdx;\n      newIdx--;\n      if (newIdx < 0) return;\n      this.setState({\n        activeQuestionIdx: newIdx\n      });\n    };\n\n    this.nextQuestion = () => {\n      let newIdx = this.state.activeQuestionIdx;\n      newIdx++;\n      if (newIdx === this.state.quiz.questions.length) return;\n      this.setState({\n        activeQuestionIdx: newIdx\n      });\n    };\n\n    this.getPercentage = ans => {\n      let total = 0;\n      ans.forEach(answer => {\n        if (answer !== 0) {\n          total += 1 / this.state.answers.length;\n        }\n      });\n      this.setState({\n        percentage: total\n      });\n    };\n\n    this.selectAnswer = (ans, idx) => {\n      let questions = this.state.quiz;\n      questions.questions[this.state.activeQuestionIdx].answers.forEach(ans => {\n        ans.selected = false;\n      });\n      questions.questions[this.state.activeQuestionIdx].answers[idx].selected = true;\n      let answers = this.state.answers;\n\n      if (ans.name === this.state.quiz.questions[this.state.activeQuestionIdx].correctAnswer) {\n        answers[this.state.activeQuestionIdx] = true;\n      } else {\n        answers[this.state.activeQuestionIdx] = false;\n      }\n\n      this.setState({\n        quiz: questions,\n        answers: answers\n      });\n      this.getPercentage(answers);\n    };\n\n    this.showModal = () => {\n      $('#modal-wrapper-quiz').fadeIn(300);\n    };\n\n    this.hideModal = () => {\n      $('#modal-wrapper-quiz').fadeOut(300);\n    };\n\n    this.finishQuiz = () => {\n      axios.post(\"/api/quizzes/save-results\", {\n        currentUser: localStorage.getItem('_ID'),\n        answers: this.state.answers,\n        quizId: this.state.quiz._id\n      }).then(res => {\n        if (res.data) {\n          this.props.history.push('/view-results?id=' + res.data.scoreId);\n        }\n      });\n    };\n\n    this.state = {\n      quiz: {},\n      authorized: false,\n      answers: [],\n      activeQuestionIdx: 0,\n      percentage: 0\n    };\n  }\n\n  componentDidMount() {\n    $('#modal-wrapper-quiz').hide();\n\n    if (this.props.location.state != undefined) {\n      this.setState({\n        authorized: true\n      });\n      this.setState({\n        quiz: this.props.location.state.quiz,\n        answers: Array(this.props.location.state.quiz.questions.length).fill(0)\n      });\n    }\n  }\n\n  render() {\n    let {\n      quiz,\n      activeQuestionIdx\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"modal-wrapper-quiz\",\n        className: \"modal-wrapper-quiz\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header\",\n            children: \"Are you sure you wish to submit your answers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.hideModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.finishQuiz,\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"take-quiz-wrapper\",\n        children: this.state.authorized ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"left\",\n              children: this.state.quiz.quizName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n              className: \"center\",\n              progress: Number((this.state.percentage * 100).toFixed(0)),\n              size: 160,\n              strokeWidth: 15,\n              circleOneStroke: \"#dadfea\",\n              circleTwoStroke: '#00aaf1'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"left\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-name\",\n                children: quiz.questions[activeQuestionIdx].questionName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-bubble-wrapper\",\n                children: this.state.quiz.questions.map((ans, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: () => this.setState({\n                    activeQuestionIdx: idx\n                  }),\n                  className: this.state.activeQuestionIdx === idx ? 'question-bubble selected-bubble' : this.state.answers[idx] === 0 ? \"question-bubble\" : 'question-bubble bubble-correct',\n                  children: idx + 1\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"answers-wrapper\",\n                children: quiz.questions[activeQuestionIdx].answers.map((ans, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: () => this.selectAnswer(ans, idx),\n                  className: ans.selected === true ? 'selected' : 'answer',\n                  children: ans.name\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttons-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.prevQuestion,\n                children: \"Previous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 41\n              }, this), this.state.activeQuestionIdx + 1 < this.state.quiz.questions.length ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.nextQuestion,\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 112\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.showModal,\n                children: \"Submit Quiz\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 164\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Not authorized\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/hanafi/Downloads/Quiz-MERN-master/client/src/components/TakeQuiz/TakeQuiz.js"],"names":["React","$","ProgressBar","axios","TakeQuiz","Component","constructor","props","prevQuestion","newIdx","state","activeQuestionIdx","setState","nextQuestion","quiz","questions","length","getPercentage","ans","total","forEach","answer","answers","percentage","selectAnswer","idx","selected","name","correctAnswer","showModal","fadeIn","hideModal","fadeOut","finishQuiz","post","currentUser","localStorage","getItem","quizId","_id","then","res","data","history","push","scoreId","authorized","componentDidMount","hide","location","undefined","Array","fill","render","quizName","Number","toFixed","questionName","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './TakeQuiz.css';\n\nimport $ from 'jquery';\nimport ProgressBar from '../ProgressBar/ProgressBar';\nimport axios from 'axios';\n\nexport default class TakeQuiz extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            quiz: {},\n            authorized: false,\n            answers: [],\n            activeQuestionIdx: 0,\n            percentage: 0\n        }\n    }\n\n    componentDidMount() {\n        $('#modal-wrapper-quiz').hide();\n        if (this.props.location.state != undefined) {\n            this.setState({authorized: true});\n            this.setState({quiz: this.props.location.state.quiz, answers: Array(this.props.location.state.quiz.questions.length).fill(0)});\n        }\n    }\n\n    prevQuestion = () => {\n        let newIdx = this.state.activeQuestionIdx;\n        newIdx--;\n        if (newIdx < 0) return;\n        this.setState({activeQuestionIdx: newIdx});\n    }\n\n    nextQuestion = () => {\n        let newIdx = this.state.activeQuestionIdx;\n        newIdx++;\n        if (newIdx === this.state.quiz.questions.length) return;\n        this.setState({activeQuestionIdx: newIdx});\n    }\n\n    getPercentage = (ans) => {\n        let total = 0;\n        ans.forEach(answer => {\n            if (answer !== 0) {\n                total += (1 / this.state.answers.length);\n            }\n        });\n        this.setState({percentage: total});\n    }\n\n    selectAnswer = (ans, idx) => {\n        let questions = this.state.quiz;\n        questions.questions[this.state.activeQuestionIdx].answers.forEach(ans => {\n            ans.selected = false;\n        });\n        questions.questions[this.state.activeQuestionIdx].answers[idx].selected = true;\n        let answers = this.state.answers;\n        if (ans.name === this.state.quiz.questions[this.state.activeQuestionIdx].correctAnswer) {\n            answers[this.state.activeQuestionIdx] = true;\n        } else {\n            answers[this.state.activeQuestionIdx] = false;\n        }\n        this.setState({quiz: questions, answers: answers});\n        this.getPercentage(answers);\n    }\n\n    showModal = () => {\n        $('#modal-wrapper-quiz').fadeIn(300);\n    }\n\n    hideModal = () => {\n        $('#modal-wrapper-quiz').fadeOut(300);\n    }\n\n    finishQuiz = () => {\n        axios.post(\"/api/quizzes/save-results\", {\n            currentUser: localStorage.getItem('_ID'),\n            answers: this.state.answers,\n            quizId: this.state.quiz._id\n        }).then(res => {\n            if (res.data) {\n                this.props.history.push('/view-results?id=' + res.data.scoreId);\n            }\n        })\n    }\n\n    render() {\n        let {quiz, activeQuestionIdx} = this.state;\n        return (\n              <>\n                    <div id=\"modal-wrapper-quiz\" className=\"modal-wrapper-quiz\">\n                        <div className=\"content\">\n                            <div className=\"header\">Are you sure you wish to submit your answers</div>\n                            <div className=\"buttons-wrapper\">\n                                <button onClick={this.hideModal}>Cancel</button>\n                                <button onClick={this.finishQuiz}>Yes</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"take-quiz-wrapper\">\n                        {this.state.authorized ?\n\n                            <div className=\"content\">\n                                <div className=\"header\">\n                                    <div className=\"left\">\n                                        {this.state.quiz.quizName}\n                                    </div>\n                                    <ProgressBar\n                                        className=\"center\"\n                                        progress={Number((this.state.percentage * 100).toFixed(0))}\n                                        size={160}\n                                        strokeWidth={15}\n                                        circleOneStroke='#dadfea'\n                                        circleTwoStroke={'#00aaf1'}\n                                    />\n                                </div>\n\n                                <div className=\"body\">\n                                    <div className=\"left\">\n                                        <div className=\"question-name\">{quiz.questions[activeQuestionIdx].questionName}</div>\n                                        <div className=\"question-bubble-wrapper\">\n                                            {this.state.quiz.questions.map((ans, idx) => (\n                                                <span onClick={() => this.setState({ activeQuestionIdx: idx })} key={idx} className={this.state.activeQuestionIdx === idx ? 'question-bubble selected-bubble' : this.state.answers[idx] === 0 ? \"question-bubble\" : 'question-bubble bubble-correct'}>\n                                                    {idx + 1}\n                                                </span>\n                                            ))}\n                                        </div>\n                                    </div>\n                                    <div className=\"right\">\n                                        <div className=\"answers-wrapper\">\n                                            {quiz.questions[activeQuestionIdx].answers.map((ans, idx) => (\n                                                <div key={idx} onClick={() => this.selectAnswer(ans, idx)} className={ans.selected === true ? 'selected' : 'answer'}>\n                                                    {ans.name}\n                                                </div>\n                                            ))}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"footer\">\n                                    <div className=\"buttons-wrapper\">\n                                        <button onClick={this.prevQuestion}>Previous</button>\n                                        {this.state.activeQuestionIdx + 1 < this.state.quiz.questions.length ? <button onClick={this.nextQuestion}>Next</button> : <button onClick={this.showModal}>Submit Quiz</button>}\n                                    </div>\n                                </div>\n                            </div>\n\n                            : <div>Not authorized</div>}\n                    </div>\n                </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}